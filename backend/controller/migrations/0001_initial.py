# Generated by Django 5.2.1 on 2025-05-25 18:59

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rooms', '0004_alter_room_options_alter_roomitemtype_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControlUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_type', models.CharField(choices=[('lighting', 'Beleuchtung'), ('climate', 'Klimasteuerung'), ('watering', 'Bewässerung'), ('co2', 'CO2-Kontrolle'), ('humidity', 'Luftfeuchtigkeit'), ('other', 'Sonstiges')], max_length=20)),
                ('name', models.CharField(help_text='Eindeutiger Name der Steuerungseinheit', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Aktiv'), ('inactive', 'Inaktiv'), ('error', 'Fehler'), ('maintenance', 'Wartung')], default='inactive', max_length=20)),
                ('last_sync', models.DateTimeField(blank=True, help_text='Letzter erfolgreicher Sync mit SPS', null=True)),
                ('plc_address', models.CharField(blank=True, help_text='SPS-Adresse oder ID', max_length=50, null=True)),
                ('plc_db_number', models.IntegerField(blank=True, help_text='Datenbaustein-Nummer in der SPS', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_units', to='rooms.room')),
            ],
            options={
                'ordering': ['room', 'name'],
                'unique_together': {('room', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ControlStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_value', models.FloatField(blank=True, help_text='Aktueller Hauptwert', null=True)),
                ('secondary_value', models.FloatField(blank=True, help_text='Aktueller Sekundärwert', null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('measurements', models.JSONField(blank=True, default=dict, null=True)),
                ('control_unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_status', to='controller.controlunit')),
            ],
        ),
        migrations.CreateModel(
            name='ControlCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('command_type', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Ausstehend'), ('sent', 'Gesendet'), ('confirmed', 'Bestätigt'), ('failed', 'Fehlgeschlagen')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('control_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='controller.controlunit')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ControlSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Montag'), (1, 'Dienstag'), (2, 'Mittwoch'), (3, 'Donnerstag'), (4, 'Freitag'), (5, 'Samstag'), (6, 'Sonntag')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('target_value', models.FloatField(help_text='Zielwert (z.B. Temperatur, Dimmlevel)')),
                ('secondary_value', models.FloatField(blank=True, help_text='Sekundärwert (z.B. Luftfeuchtigkeit)', null=True)),
                ('parameters', models.JSONField(blank=True, default=dict, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('control_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='controller.controlunit')),
            ],
            options={
                'ordering': ['weekday', 'start_time'],
                'unique_together': {('control_unit', 'weekday', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='ControlParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Parameter-Schlüssel', max_length=50)),
                ('value', models.TextField(help_text='Parameter-Wert')),
                ('param_type', models.CharField(choices=[('float', 'Dezimalzahl'), ('int', 'Ganzzahl'), ('bool', 'Boolean'), ('string', 'Text'), ('json', 'JSON')], default='string', max_length=10)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, help_text='Einheit (z.B. °C, %, lux)', max_length=20, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('control_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='controller.controlunit')),
            ],
            options={
                'ordering': ['control_unit', 'key'],
                'unique_together': {('control_unit', 'key')},
            },
        ),
    ]

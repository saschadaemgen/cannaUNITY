# Generated by Django 5.2.1 on 2025-05-18 08:54

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContaminantCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Verunreinigungskategorie',
                'verbose_name_plural': 'Verunreinigungskategorien',
            },
        ),
        migrations.CreateModel(
            name='LaboratoryReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('sample_id', models.CharField(db_index=True, max_length=100)),
                ('sample_name', models.CharField(max_length=200)),
                ('sample_type', models.CharField(max_length=100)),
                ('collection_person', models.CharField(help_text='Person, die die Probe gesammelt hat', max_length=200)),
                ('analysis_person', models.CharField(help_text='Person, die die Analyse durchgeführt hat', max_length=200)),
                ('approval_person', models.CharField(help_text='Person, die den Bericht freigegeben hat', max_length=200)),
                ('collection_date', models.DateField()),
                ('analysis_date', models.DateField()),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('is_gmp_compliant', models.BooleanField(default=False)),
                ('is_gacp_compliant', models.BooleanField(default=False)),
                ('overall_status', models.CharField(choices=[('passed', 'Bestanden'), ('failed', 'Nicht bestanden'), ('pending', 'Ausstehend')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('track_and_trace_batch', models.CharField(blank=True, help_text='Batch-ID aus Track & Trace (zukünftige Integration)', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Laborbericht',
                'verbose_name_plural': 'Laborberichte',
            },
        ),
        migrations.CreateModel(
            name='CannabinoidProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('thc', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='THC')),
                ('thca', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='THCA')),
                ('cbd', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CBD')),
                ('cbda', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CBDA')),
                ('cbn', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CBN')),
                ('cbg', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CBG')),
                ('cbga', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='CBGA')),
                ('total_thc', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Gesamt-THC')),
                ('total_cbd', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Gesamt-CBD')),
                ('total_cannabinoids', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Gesamt-Cannabinoide')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cannabinoid_profile', to='laborreports.laboratoryreport')),
            ],
            options={
                'verbose_name': 'Cannabinoid-Profil',
                'verbose_name_plural': 'Cannabinoid-Profile',
            },
        ),
        migrations.CreateModel(
            name='TerpeneProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('myrcene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('limonene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('caryophyllene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('terpinolene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('linalool', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('pinene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('humulene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('ocimene', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('total_terpenes', models.DecimalField(decimal_places=3, default=0, max_digits=5, verbose_name='Gesamt-Terpene')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='terpene_profile', to='laborreports.laboratoryreport')),
            ],
            options={
                'verbose_name': 'Terpen-Profil',
                'verbose_name_plural': 'Terpen-Profile',
            },
        ),
        migrations.CreateModel(
            name='ContaminantTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Verunreinigungsname')),
                ('threshold_value', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Grenzwert')),
                ('detected_value', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Gemessener Wert')),
                ('unit', models.CharField(default='ppm', max_length=20, verbose_name='Einheit')),
                ('status', models.CharField(choices=[('passed', 'Bestanden'), ('failed', 'Nicht bestanden'), ('pending', 'Ausstehend')], default='pending', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tests', to='laborreports.contaminantcategory')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contaminant_tests', to='laborreports.laboratoryreport')),
            ],
            options={
                'verbose_name': 'Verunreinigungstest',
                'verbose_name_plural': 'Verunreinigungstests',
                'unique_together': {('report', 'name')},
            },
        ),
    ]
